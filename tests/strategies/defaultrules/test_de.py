from simplemma.strategies import RulesStrategy


def test_apply_de() -> None:
    """Test German rules."""
    rules_strategy = RulesStrategy()
    # doesn't exist
    assert rules_strategy.get_lemma("Whatawordicantbelieveit", "de") is None
    # nouns
    # assert rules_strategy.get_lemma("Besorgnis", "de") == "Besorgnis"
    # assert rules_strategy.get_lemma("Besorgnisse", "de") == "Besorgnis"
    # assert rules_strategy.get_lemma("Abonnenten", "de") == "Abonnent"
    assert rules_strategy.get_lemma("Pfifferling", "de") == "Pfifferling"
    assert rules_strategy.get_lemma("Pfifferlinge", "de") == "Pfifferling"
    assert rules_strategy.get_lemma("Pfifferlingen", "de") == "Pfifferling"
    assert rules_strategy.get_lemma("Heiterkeiten", "de") == "Heiterkeit"
    # assert rules_strategy.get_lemma("Bahnreisenden", "de") == "Bahnreisende"
    assert rules_strategy.get_lemma("Bürgertums", "de") == "Bürgertum"
    assert rules_strategy.get_lemma("Achterls", "de") == "Achterl"
    # assert rules_strategy.get_lemma("Inspekteurinnen", "de") == "Inspekteurin"
    # assert rules_strategy.get_lemma("Zwiebelschneider", "de") == "Zwiebelschneider"
    # assert rules_strategy.get_lemma("Zwiebelschneiders", "de") == "Zwiebelschneider"
    # assert rules_strategy.get_lemma("Schneidern", "de") == "Schneider"
    # assert rules_strategy.get_lemma("Bedenkens", "de") == "Bedenken"
    # assert rules_strategy.get_lemma("Facetten", "de") == "Facette"
    assert rules_strategy.get_lemma("Kazakhstans", "de") == "Kazakhstan"
    # assert rules_strategy.get_lemma("Hämatome", "de") == "Hämatom"
    # assert rules_strategy.get_lemma("Hämatomen", "de") == "Hämatom"
    # assert rules_strategy.get_lemma("Hämatoms", "de") == "Hämatom"
    assert rules_strategy.get_lemma("Ökonomen", "de") == "Ökonom"
    assert rules_strategy.get_lemma("Chauffeusen", "de") == "Chauffeuse"
    # assert rules_strategy.get_lemma("Bibliotheken", "de") == "Bibliothek"
    assert rules_strategy.get_lemma("Kazakhstans", "de") == "Kazakhstan"
    # assert rules_strategy.get_lemma("Gymnasiasten", "de") == "Gymnasiast"
    # assert rules_strategy.get_lemma("Dezernates", "de") == "Dezernat"
    assert rules_strategy.get_lemma("Luftikussen", "de") == "Luftikus"
    assert rules_strategy.get_lemma("Trunkenbolde", "de") == "Trunkenbold"
    assert rules_strategy.get_lemma("Theologien", "de") == "Theologie"
    # assert rules_strategy.get_lemma("Geschädigten", "de") == "Geschädigte"
    # assert rules_strategy.get_lemma("Zeitschriftenmarken", "de") == "Zeitschriftenmarke"
    # assert rules_strategy.get_lemma("Gesundheitsfreaks", "de") == "Gesundheitsfreak"
    # adjectives
    assert rules_strategy.get_lemma("großartiges", "de") == "großartig"
    # assert rules_strategy.get_lemma("achtsame", "de") == "achtsam"
    # assert rules_strategy.get_lemma("aufgemachtes", "de") == "aufgemacht"
    # assert rules_strategy.get_lemma("schnellster", "de") == "schnell"
    # assert rules_strategy.get_lemma("geächteten", "de") == "geächtet"
    # assert rules_strategy.get_lemma("aufgeblasenes", "de") == "aufgeblasen"
    # assert rules_strategy.get_lemma("viszerale", "de") == "viszeral"
    # assert rules_strategy.get_lemma("kurioses", "de") == "kurios"
    # assert rules_strategy.get_lemma("adipösen", "de") == "adipös"
    assert rules_strategy.get_lemma("isotropen", "de") == "isotrop"
    # assert rules_strategy.get_lemma("kulanten", "de") == "kulant"
    # assert rules_strategy.get_lemma("konvexes", "de") == "konvex"
    # assert rules_strategy.get_lemma("myope", "de") == "myop"
    # assert rules_strategy.get_lemma("geschleunigst", "de") == "geschleunig"
    # assert rules_strategy.get_lemma("zweitrangigster", "de") == "zweitrangig"
    # assert rules_strategy.get_lemma("kompetenteste", "de") == "kompetent"
    # assert rules_strategy.get_lemma("leiwandste", "de") == "leiwand"
    # assert rules_strategy.get_lemma("gescheitesten", "de") == "gescheit"
    # assert rules_strategy.get_lemma("luzidesten", "de") == "luzide"  # luzid?
    # assert rules_strategy.get_lemma("frigides", "de") == "frigide"
    # assert rules_strategy.get_lemma("frigideren", "de") == "frigide"
    # assert rules_strategy.get_lemma("kruden", "de") == "krude"
    # assert rules_strategy.get_lemma("krudesten", "de") == "krude"
    # assert rules_strategy.get_lemma("zwielichtigen", "de") == "zwielichtig"
    # assert rules_strategy.get_lemma("freakige", "de") == "freakig"
    # assert rules_strategy.get_lemma("plausibles", "de") == "plausibel"
    # assert rules_strategy.get_lemma("propres", "de") == "proper"
    # assert rules_strategy.get_lemma("perlende", "de") == "perlend"
    # assert rules_strategy.get_lemma("wuchernder", "de") == "wuchernd"
    assert rules_strategy.get_lemma("angebrachtes", "de") == "angebracht"
    # Gendersprache normalization
    assert rules_strategy.get_lemma("ZuschauerInnen", "de") == "Zuschauer:innen"
    assert rules_strategy.get_lemma("Zuschauer*innen", "de") == "Zuschauer:innen"
    assert rules_strategy.get_lemma("Zuschauer_innen", "de") == "Zuschauer:innen"
    assert rules_strategy.get_lemma("Zuschauer-innen", "de") == "Zuschauer:innen"
