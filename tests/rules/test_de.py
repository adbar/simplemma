from simplemma.rules import APPLY_RULES, FIND_KNOWN_PREFIXES


def test_test_prefixes_de():
    assert FIND_KNOWN_PREFIXES["de"]("zerlemmatisiertes") == "zer"
    assert FIND_KNOWN_PREFIXES["de"]("abzugshaube") == None


def test_apply_de() -> None:
    """Test German rules."""
    # doesn't exist
    assert APPLY_RULES["de"]("Whatawordicantbelieveit") is None
    # nouns
    # assert APPLY_RULES["de"]("Besorgnis") == "Besorgnis"
    # assert APPLY_RULES["de"]("Besorgnisse") == "Besorgnis"
    # assert APPLY_RULES["de"]("Abonnenten") == "Abonnent"
    assert APPLY_RULES["de"]("Pfifferling") == "Pfifferling"
    assert APPLY_RULES["de"]("Pfifferlinge") == "Pfifferling"
    assert APPLY_RULES["de"]("Pfifferlingen") == "Pfifferling"
    assert APPLY_RULES["de"]("Heiterkeiten") == "Heiterkeit"
    # assert APPLY_RULES["de"]("Bahnreisenden") == "Bahnreisende"
    assert APPLY_RULES["de"]("Bürgertums") == "Bürgertum"
    assert APPLY_RULES["de"]("Achterls") == "Achterl"
    # assert APPLY_RULES["de"]("Inspekteurinnen") == "Inspekteurin"
    # assert APPLY_RULES["de"]("Zwiebelschneider") == "Zwiebelschneider"
    # assert APPLY_RULES["de"]("Zwiebelschneiders") == "Zwiebelschneider"
    # assert APPLY_RULES["de"]("Schneidern") == "Schneider"
    # assert APPLY_RULES["de"]("Bedenkens") == "Bedenken"
    # assert APPLY_RULES["de"]("Facetten") == "Facette"
    assert APPLY_RULES["de"]("Kazakhstans") == "Kazakhstan"
    # assert APPLY_RULES["de"]("Hämatome") == "Hämatom"
    # assert APPLY_RULES["de"]("Hämatomen") == "Hämatom"
    # assert APPLY_RULES["de"]("Hämatoms") == "Hämatom"
    assert APPLY_RULES["de"]("Ökonomen") == "Ökonom"
    assert APPLY_RULES["de"]("Chauffeusen") == "Chauffeuse"
    # assert APPLY_RULES["de"]("Bibliotheken") == "Bibliothek"
    assert APPLY_RULES["de"]("Kazakhstans") == "Kazakhstan"
    # assert APPLY_RULES["de"]("Gymnasiasten") == "Gymnasiast"
    # assert APPLY_RULES["de"]("Dezernates") == "Dezernat"
    assert APPLY_RULES["de"]("Luftikussen") == "Luftikus"
    assert APPLY_RULES["de"]("Trunkenbolde") == "Trunkenbold"
    assert APPLY_RULES["de"]("Theologien") == "Theologie"
    # assert APPLY_RULES["de"]("Geschädigten") == "Geschädigte"
    # assert APPLY_RULES["de"]("Zeitschriftenmarken") == "Zeitschriftenmarke"
    # assert APPLY_RULES["de"]("Gesundheitsfreaks") == "Gesundheitsfreak"
    # adjectives
    assert APPLY_RULES["de"]("großartiges") == "großartig"
    # assert APPLY_RULES["de"]("achtsame") == "achtsam"
    # assert APPLY_RULES["de"]("aufgemachtes") == "aufgemacht"
    # assert APPLY_RULES["de"]("schnellster") == "schnell"
    # assert APPLY_RULES["de"]("geächteten") == "geächtet"
    # assert APPLY_RULES["de"]("aufgeblasenes") == "aufgeblasen"
    # assert APPLY_RULES["de"]("viszerale") == "viszeral"
    # assert APPLY_RULES["de"]("kurioses") == "kurios"
    # assert APPLY_RULES["de"]("adipösen") == "adipös"
    assert APPLY_RULES["de"]("isotropen") == "isotrop"
    # assert APPLY_RULES["de"]("kulanten") == "kulant"
    # assert APPLY_RULES["de"]("konvexes") == "konvex"
    # assert APPLY_RULES["de"]("myope") == "myop"
    # assert APPLY_RULES["de"]("geschleunigst") == "geschleunig"
    # assert APPLY_RULES["de"]("zweitrangigster") == "zweitrangig"
    # assert APPLY_RULES["de"]("kompetenteste") == "kompetent"
    # assert APPLY_RULES["de"]("leiwandste") == "leiwand"
    # assert APPLY_RULES["de"]("gescheitesten") == "gescheit"
    # assert APPLY_RULES["de"]("luzidesten") == "luzide"  # luzid?
    # assert APPLY_RULES["de"]("frigides") == "frigide"
    # assert APPLY_RULES["de"]("frigideren") == "frigide"
    # assert APPLY_RULES["de"]("kruden") == "krude"
    # assert APPLY_RULES["de"]("krudesten") == "krude"
    # assert APPLY_RULES["de"]("zwielichtigen") == "zwielichtig"
    # assert APPLY_RULES["de"]("freakige") == "freakig"
    # assert APPLY_RULES["de"]("plausibles") == "plausibel"
    # assert APPLY_RULES["de"]("propres") == "proper"
    # assert APPLY_RULES["de"]("perlende") == "perlend"
    # assert APPLY_RULES["de"]("wuchernder") == "wuchernd"
    assert APPLY_RULES["de"]("angebrachtes") == "angebracht"
    # Gendersprache normalization
    assert APPLY_RULES["de"]("ZuschauerInnen") == "Zuschauer:innen"
    assert APPLY_RULES["de"]("Zuschauer*innen") == "Zuschauer:innen"
    assert APPLY_RULES["de"]("Zuschauer_innen") == "Zuschauer:innen"
    assert APPLY_RULES["de"]("Zuschauer-innen") == "Zuschauer:innen"
