from simplemma.rules import APPLY_RULES, FIND_KNOWN_PREFIXES


def test_test_prefixes_de():
    assert FIND_KNOWN_PREFIXES["de"]("zerlemmatisiertes") == "zer"
    assert FIND_KNOWN_PREFIXES["de"]("abzugshaube") == None


def test_apply_de() -> None:
    """Test German rules."""
    # doesn't exist
    assert APPLY_RULES["de"]("Whatawordicantbelieveit", False) is None
    # nouns
    # assert APPLY_RULES["de"]("Besorgnis", False) == "Besorgnis"
    # assert APPLY_RULES["de"]("Besorgnisse", False) == "Besorgnis"
    # assert APPLY_RULES["de"]("Abonnenten", False) == "Abonnent"
    assert APPLY_RULES["de"]("Pfifferling", False) == "Pfifferling"
    assert APPLY_RULES["de"]("Pfifferlinge", False) == "Pfifferling"
    assert APPLY_RULES["de"]("Pfifferlingen", False) == "Pfifferling"
    assert APPLY_RULES["de"]("Heiterkeiten", False) == "Heiterkeit"
    # assert APPLY_RULES["de"]("Bahnreisenden", False) == "Bahnreisende"
    assert APPLY_RULES["de"]("Bürgertums", False) == "Bürgertum"
    assert APPLY_RULES["de"]("Achterls", False) == "Achterl"
    # assert APPLY_RULES["de"]("Inspekteurinnen", False) == "Inspekteurin"
    # assert APPLY_RULES["de"]("Zwiebelschneider", False) == "Zwiebelschneider"
    # assert APPLY_RULES["de"]("Zwiebelschneiders", False) == "Zwiebelschneider"
    # assert APPLY_RULES["de"]("Schneidern", False) == "Schneider"
    # assert APPLY_RULES["de"]("Bedenkens", False) == "Bedenken"
    # assert APPLY_RULES["de"]("Facetten", False) == "Facette"
    assert APPLY_RULES["de"]("Kazakhstans", False) == "Kazakhstan"
    # assert APPLY_RULES["de"]("Hämatome", False) == "Hämatom"
    # assert APPLY_RULES["de"]("Hämatomen", False) == "Hämatom"
    # assert APPLY_RULES["de"]("Hämatoms", False) == "Hämatom"
    assert APPLY_RULES["de"]("Ökonomen", False) == "Ökonom"
    assert APPLY_RULES["de"]("Chauffeusen", False) == "Chauffeuse"
    # assert APPLY_RULES["de"]("Bibliotheken", False) == "Bibliothek"
    assert APPLY_RULES["de"]("Kazakhstans", False) == "Kazakhstan"
    # assert APPLY_RULES["de"]("Gymnasiasten", False) == "Gymnasiast"
    # assert APPLY_RULES["de"]("Dezernates", False) == "Dezernat"
    assert APPLY_RULES["de"]("Luftikussen", False) == "Luftikus"
    assert APPLY_RULES["de"]("Trunkenbolde", False) == "Trunkenbold"
    assert APPLY_RULES["de"]("Theologien", False) == "Theologie"
    # assert APPLY_RULES["de"]("Geschädigten", False) == "Geschädigte"
    # assert APPLY_RULES["de"]("Zeitschriftenmarken", False) == "Zeitschriftenmarke"
    # assert APPLY_RULES["de"]("Gesundheitsfreaks", False) == "Gesundheitsfreak"
    # adjectives
    assert APPLY_RULES["de"]("großartiges", False) == "großartig"
    # assert APPLY_RULES["de"]("achtsame", False) == "achtsam"
    # assert APPLY_RULES["de"]("aufgemachtes", False) == "aufgemacht"
    # assert APPLY_RULES["de"]("schnellster", False) == "schnell"
    # assert APPLY_RULES["de"]("geächteten", False) == "geächtet"
    # assert APPLY_RULES["de"]("aufgeblasenes", False) == "aufgeblasen"
    # assert APPLY_RULES["de"]("viszerale", False) == "viszeral"
    # assert APPLY_RULES["de"]("kurioses", False) == "kurios"
    # assert APPLY_RULES["de"]("adipösen", False) == "adipös"
    assert APPLY_RULES["de"]("isotropen", False) == "isotrop"
    # assert APPLY_RULES["de"]("kulanten", False) == "kulant"
    # assert APPLY_RULES["de"]("konvexes", False) == "konvex"
    # assert APPLY_RULES["de"]("myope", False) == "myop"
    # assert APPLY_RULES["de"]("geschleunigst", False) == "geschleunig"
    # assert APPLY_RULES["de"]("zweitrangigster", False) == "zweitrangig"
    # assert APPLY_RULES["de"]("kompetenteste", False) == "kompetent"
    # assert APPLY_RULES["de"]("leiwandste", False) == "leiwand"
    # assert APPLY_RULES["de"]("gescheitesten", False) == "gescheit"
    # assert APPLY_RULES["de"]("luzidesten", False) == "luzide"  # luzid?
    # assert APPLY_RULES["de"]("frigides", False) == "frigide"
    # assert APPLY_RULES["de"]("frigideren", False) == "frigide"
    # assert APPLY_RULES["de"]("kruden", False) == "krude"
    # assert APPLY_RULES["de"]("krudesten", False) == "krude"
    # assert APPLY_RULES["de"]("zwielichtigen", False) == "zwielichtig"
    # assert APPLY_RULES["de"]("freakige", False) == "freakig"
    # assert APPLY_RULES["de"]("plausibles", False) == "plausibel"
    # assert APPLY_RULES["de"]("propres", False) == "proper"
    # assert APPLY_RULES["de"]("perlende", False) == "perlend"
    # assert APPLY_RULES["de"]("wuchernder", False) == "wuchernd"
    assert APPLY_RULES["de"]("angebrachtes", False) == "angebracht"
    # Gendersprache normalization
    assert APPLY_RULES["de"]("ZuschauerInnen", False) == "Zuschauer:innen"
    assert APPLY_RULES["de"]("Zuschauer*innen", False) == "Zuschauer:innen"
    assert APPLY_RULES["de"]("Zuschauer_innen", False) == "Zuschauer:innen"
    assert APPLY_RULES["de"]("Zuschauer-innen", False) == "Zuschauer:innen"
